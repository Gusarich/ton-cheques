(int) load_public_key () inline {
    var ds = get_data().begin_parse();
    return ds~load_uint(256);
}

() recv_internal (slice in_msg) impure {

}

() recv_external (slice in_msg) impure {
    var signature = in_msg~load_bits(512);
    var public_key = load_public_key();

    throw_unless(34, check_signature(slice_hash(in_msg), signature, public_key));
    accept_message();
    
    in_msg~load_uint(32);
    
    var msg = begin_cell()
        .store_uint(0x10, 6)
        .store_slice(in_msg)
        .store_coins(0)
        .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
        .store_uint(0, 1)
    .end_cell();
    send_raw_message(msg, 160);
}
